<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shopping Cart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      color: #333;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      min-height: 100vh;
    }

    .container {
      width: 70%;
      max-width: 850px;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      padding: 20px;
      margin: 20px;
    }

    h1 {
      text-align: center;
      margin-bottom: 20px;
      color: #007BFF;
    }

    .nav-link {
      display: inline-block;
      margin-bottom: 20px;
      text-decoration: none;
      color: #fff;
      background-color: #007BFF;
      padding: 10px 15px;
      border-radius: 4px;
    }

    .nav-link:hover {
      background-color: #0056b3;
    }

    input[type="text"] {
      width: 100%;
      padding: 9px;
      margin-bottom: 20px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 14px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }

    th, td {
      border: 1px solid #ddd;
      padding: 10px;
      text-align: left;
    }

    th {
      background-color: #f4f4f4;
      color: #333;
      font-weight: bold;
    }

    tr:nth-child(even) {
      background-color: #f9f9f9;
    }

    a.pull-right {
      color: #007BFF;
      text-decoration: none;
    }

    a.pull-right:hover {
      text-decoration: underline;
    }

    .input-container {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    input[type="number"] {
      width: 50px;
    }

    .cart {
      position: sticky;
      top: 20px;
      width: 500px;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      padding: 20px;
      margin: 20px 0 20px 20px;
      height: fit-content;
      max-height: 70vh; 
      overflow-y: auto;
    }


    .cart h2 {
      margin-top: 0;
    }

    .cart-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }

    .cart-footer {
      margin-top: 20px;
      display: flex;
      justify-content: space-between;
    }

    .cart-footer button {
      background-color: #007BFF;
      color: white;
      padding: 10px 15px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .cart-footer button:hover {
      background-color: #0056b3;
    }

    .cart-footer .clear-btn {
      background-color: #DC3545;
    }

    .cart-footer .clear-btn:hover {
      background-color: #A71D2A;
    }

    .input-container input[type="number"] {
    width: 70px;
    padding: 5px;
    font-size: 14px;
    text-align: center;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: #f9f9f9;
    }

    .cart input[type="number"] {
        width: 60px;
        padding: 5px;
        font-size: 14px;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f9f9f9;
    }

    .input-container input[type="number"]:focus,
    .cart input[type="number"]:focus {
        outline: none;
        border-color: #007BFF;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .input-container button {
        padding: 7px 15px;
        font-size: 14px;
        background-color: #007BFF;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .input-container button:hover {
        background-color: #0056b3;
    }

    .cart button.remove-btn {
        padding: 5px 10px;
        font-size: 14px;
        background-color: #DC3545;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .cart button.remove-btn:hover {
        background-color: #A71D2A;
    }

    .cart-footer button.clear-btn {
        padding: 10px 15px;
        font-size: 14px;
        background-color: #DC3545;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .cart-footer button.clear-btn:hover {
        background-color: #A71D2A;
    }

    button {
        font-family: Arial, sans-serif;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>マルタ水産</h1>
    <a class="nav-link" href="/new">新商品名入力</a>
    <input type="text" id="myInput" onkeyup="searchFunc()" placeholder="商品名を探す" title="商品名を入力">
    <table>
      <thead>
        <tr>
          <th>商品名</th>
          <th>価格</th>
          <th>操作</th>
          <th>個数</th>
        </tr>
      </thead>
      <tbody id="myTable">
        <% items.forEach(p => { %>
          <tr>
            <td><%= p.product %></td>
            <% if (p.price) { %>
              <% if (p.perkg) { %>
                <td>¥<%= p.price %>/kg</td>
              <% } else { %>
                <td>¥<%= p.price %></td>
              <% } %>
            <% } else { %>
              <td></td>
            <% } %>
            <td><a class="pull-right" href="<%= '/' + p.id %>">変更</a></td>
            <% if (p.price) { %>
            <td> 
                <div class="input-container">
                  <input type="number" id="number-<%= p.id %>" name="number" value="1" min="1" required>
                  <button onclick="addToCart('<%= p.id %>', '<%= p.product %>', '<%= p.price %>', '<%= p.perkg %>')">入力</button>
                </div>
            </td>
            <% } else { %>
              <td></td>
            <% } %>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <div class="cart" id="cart">
    <h2>購入</h2>
    <div id="cart-items"></div>
    <div class="cart-footer">
      <p><strong>合計金額: ¥<span id="total-cost">0</span></strong></p>
      <button class="clear-btn" onclick="clearCart()">全消去</button>
    </div>
  </div>

  <script>
    function searchFunc() {
        let input = document.getElementById("myInput");
        let filter = input.value.toUpperCase();
        let tbody = document.getElementById("myTable");
        let tr = tbody.getElementsByTagName("tr");
        for (let i = 0; i < tr.length; i++) {
          let td = tr[i].getElementsByTagName("td")[0];
          if (td) {
            let txtValue = td.textContent || td.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
              tr[i].style.display = ""; 
            } else {
              tr[i].style.display = "none"; 
            }
          }
        }
    }

    let shoppingCart = [];

    function addToCart(id, name, price, perkg) {
      const input = document.getElementById(`number-${id}`);
      let quantity = parseFloat(input.value);

      if (!quantity) {
        input.value = 1
      } else {
        if (perkg === "true") {
          quantity = Math.ceil(quantity * 100) / 100;
        } else {
          quantity = parseInt(quantity);
        }

        const existingItem = shoppingCart.find((item) => item.id === id);
        if (existingItem) {
          existingItem.quantity += quantity;
        } else {
          shoppingCart.push({ id, name, price, perkg, quantity });
        }
        updateCart();
      }
  }

  function updateCart() {
    const cartItemsDiv = document.getElementById("cart-items");
    const totalCostSpan = document.getElementById("total-cost");
    cartItemsDiv.innerHTML = "";

    if (shoppingCart.length === 0) {
      totalCostSpan.textContent = "0";
      return;
    }

    let totalCost = 0;

    shoppingCart.forEach((item) => {
      if (!item.quantity) {
        item.quantity = 1
      }
      let itemTotal = item.price * item.quantity;
      totalCost += itemTotal;

      let perkgLabel = item.perkg === "true" ? "kg" : "";

      const formattedItemTotal = itemTotal % 1 === 0 ? itemTotal : itemTotal.toFixed(2);

      const cartItem = document.createElement("div");
      cartItem.className = "cart-item";
      cartItem.style.display = "grid";
      cartItem.style.gridTemplateColumns = "2fr 2fr 1fr 1fr";
      cartItem.style.alignItems = "center";
      cartItem.style.marginBottom = "10px";

      const quantityInput = item.perkg === "true"
        ? `<input type="number" step="0.01" value="${item.quantity}" min="0.01" onchange="updateItem('${item.id}', this.value)"> ${perkgLabel}`
        : `<input type="number" value="${item.quantity}" min="1" onchange="updateItem('${item.id}', this.value)"> ${perkgLabel}`;

      cartItem.innerHTML = `
        <span>${item.name}</span>
        <div>${quantityInput}</div>
        <span>¥${formattedItemTotal}</span>
        <button class="remove-btn" onclick="removeItem('${item.id}')">消去</button>
      `;

      cartItemsDiv.appendChild(cartItem);
      
    });

    const formattedTotalCost = totalCost % 1 === 0 ? totalCost : totalCost.toFixed(2);
    totalCostSpan.textContent = formattedTotalCost.toLocaleString();
}


  function updateItem(id, newQuantity) {
    const item = shoppingCart.find((item) => item.id === id);
    if (item) {
      let updatedQuantity = parseFloat(newQuantity);
      if (item.perkg === "true") {
        updatedQuantity = Math.ceil(updatedQuantity * 100) / 100;
        if (updatedQuantity < 0.01) {
          removeItem(id);
          return;
        }
      } else {
        updatedQuantity = parseInt(updatedQuantity);
        if (updatedQuantity < 1) {
          removeItem(id);
          return;
        }
      }
      item.quantity = updatedQuantity;
    }
    updateCart();
  }

  function removeItem(id) {
    shoppingCart = shoppingCart.filter(item => item.id !== id);
    updateCart();
  }

  function clearCart() {
    shoppingCart = [];
    updateCart();
  }
  </script>
</body>
</html>
